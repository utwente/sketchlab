<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>nl.javalon</groupId>
	<artifactId>sketchlab</artifactId>
	<version>v2.4-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Sketchlab</name>
	<description>Backend for Sketchlab sketching course tool</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Versions -->
		<java.version>1.8</java.version>
		<flyway.version>4.2.0</flyway.version>
		<swagger.version>2.7.0</swagger.version>
		<hibernate-validator.version>5.4.1.Final</hibernate-validator.version>

		<!-- Database setup for entity generation during Maven generate-sources cycle -->
		<database.url>jdbc:h2:file:./target/maven-sketchlab.db;MODE=PostgreSQL;database_to_upper=false</database.url>
		<database.driver>org.h2.Driver</database.driver>
		<database.jooq.name>org.jooq.util.h2.H2Database</database.jooq.name>
		<database.user>sa</database.user>
		<database.password/>
		<database.groupId>com.h2database</database.groupId>
		<database.artifactId>h2</database.artifactId>
		<database.version>1.4.196</database.version>
	</properties>

	<dependencies>
		<!-- Spring dependencies -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0-rev-1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Email and email templates -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- CSV mapping -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-csv</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>4.1</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>${database.groupId}</groupId>
			<artifactId>${database.artifactId}</artifactId>
			<version>${database.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway.version}</version>
		</dependency>

		<!-- Documentation -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-bean-validators</artifactId>
			<version>${swagger.version}</version>
		</dependency>


		<!-- Validation -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>

		<!-- Other -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.18</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.twelvemonkeys.imageio</groupId>
			<artifactId>imageio-jpeg</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.8</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.0.0-M1</version>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.5</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<argLine>-Xmx2048m</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>Build Info</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
					<execution>
						<id>Repackage</id>
						<phase>package</phase>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Jooq needs a populated database, so populate it first -->
			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<driver>${database.driver}</driver>
					<url>${database.url}</url>
					<user>${database.user}</user>
					<password>${database.password}</password>
					<locations>
						<location>filesystem:src/main/resources/db/migration/common</location>
						<location>filesystem:src/main/resources/db/migration/h2</location>
					</locations>
				</configuration>
				<dependencies>
					<dependency>
						<artifactId>${database.artifactId}</artifactId>
						<groupId>${database.groupId}</groupId>
						<version>${database.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Jooq -->
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>3.9.1</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<artifactId>${database.artifactId}</artifactId>
						<groupId>${database.groupId}</groupId>
						<version>${database.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<jdbc>
						<driver>${database.driver}</driver>
						<url>${database.url}</url>
						<user>${database.user}</user>
						<password>${database.password}</password>
					</jdbc>

					<!-- Generator parameters -->
					<generator>
						<generate>
							<immutablePojos>false</immutablePojos>
							<pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
							<daos>true</daos>
							<jpaAnnotations>true</jpaAnnotations>
							<validationAnnotations>true</validationAnnotations>
							<springAnnotations>true</springAnnotations>
						</generate>
						<database>
							<name>${database.jooq.name}</name>
							<includes>.*</includes>
							<excludes>schema_version</excludes> <!-- Flyway makes schema_version -->
							<inputSchema>PUBLIC</inputSchema>
							<outputSchema>public</outputSchema>
						</database>
						<target>
							<packageName>nl.javalon.sketchlab.entity</packageName>
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>

			<!-- Git -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.1</version>

				<configuration>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<format>properties</format>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>
					<includeOnlyProperties>
						<includeOnlyProperty>git.commit.id.describe-short</includeOnlyProperty>
						<includeOnlyProperty>git.build.time</includeOnlyProperty>
						<includeOnlyProperty>git.build.version</includeOnlyProperty>
						<includeOnlyProperty>git.branch</includeOnlyProperty>
					</includeOnlyProperties>
					<abbrevLength>7</abbrevLength>
					<commitIdGenerationMode>flat</commitIdGenerationMode>
					<gitDescribe>
						<always>true</always>
						<abbrev>7</abbrev>
						<dirty>-dirty</dirty>
						<match>*</match>
						<tags>false</tags>
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm run-script prod</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run-script build</arguments>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<nodeVersion>v8.11.1</nodeVersion>
					<npmVersion>5.6.0</npmVersion>
					<workingDirectory>src/main/webapp</workingDirectory>
					<installDirectory>target</installDirectory>
				</configuration>
			</plugin>

			<!-- Asciidoctor -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.6</version>
				<configuration>
					<sourceDirectory>src/docs/asciidoc</sourceDirectory>
					<sourceDocumentName>developers-guide.adoc</sourceDocumentName>
					<outputDirectory>target/docs/asciidoc</outputDirectory>
					<backend>html</backend>
					<doctype>book</doctype>
				</configuration>
				<executions>
					<execution>
						<id>developers-guide</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
